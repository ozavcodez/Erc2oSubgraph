# type Token @entity {
#   id: ID!
#   name: String!
#   symbol: String!
#   decimals: Int!
#   balances: [Balance!] @derivedFrom(field: "token")
# }


# type Balance @entity {
#   id: ID!
#   user: User!
#   token: Token!
#   balance: BigInt!
#   timestamp: BigInt!
#   transactionHash: Bytes!
# }

# type User @entity {
#   id: ID!
#   balances: [Balance!] @derivedFrom(field: "user")
# }

type User @entity {
  id: ID!
  balances: [Balance!] @derivedFrom(field: "user") 
  approvalsGiven: [Approval!] @derivedFrom(field: "owner")
  approvalsReceived: [Approval!] @derivedFrom(field: "spender") 
}

type Token @entity {
  id: ID! 
  name: String! 
  symbol: String! 
  decimals: Int!
  totalSupply: BigInt! 
  balances: [Balance!] @derivedFrom(field: "token") 
  approvals: [Approval!] @derivedFrom(field: "token") 
}

type Balance @entity {
  id: ID! # Unique identifier (user address + token address).
  user: User! # Relationship field linking to the User entity.
  token: Token! 
  balance: BigInt! 
  timestamp: BigInt! 
  transactionHash: Bytes! 
}

type Approval @entity {
  id: ID! 
  owner: User! 
  spender: User! 
  token: Token! 
  amount: BigInt!
  timestamp: BigInt! 
  transactionHash: Bytes!
}
